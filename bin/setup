#!/usr/bin/env ruby
require 'fileutils'
include FileUtils

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file.

  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'
  system('bundle check') || system!('bundle install --deployment --path vendor/bundle')

  # Install JavaScript dependencies if using Yarn
  # system('bin/yarn')

  puts "\n== Copying sample config files =="
  %w(database.yml ircbot.yml unicorn.rb).each do |file|
    unless File.exist?("config/#{file}")
      puts("copy \"#{file}\"")
      cp("config/#{file}.sample", "config/#{file}")
      puts("\n== Edit \"config/#{file}\" and rerun this command.")
      exit
    else
      puts("skip \"#{file}\"")
    end
  end

  puts "\n== Setting Environment Datas =="
  env = ''
  unless File.exist?('log-archiver.default')
    h = {
      'RAILS_ENV': 'production',
      'LOG_ARCHIVER_DATABASE_PASSWORD': '',
      'SECRET_KEY_BASE': `bundle exec bin/rails secret`.chop
    }
    h.each do |key, value|
      print("input \"#{key}\" [#{value}] : ")
      input = gets.chop
      h[key] = input unless input
    end

    puts("\ncreate \"log-archiver.default\"")
    begin
      File.open('log-archiver.default', 'w') do |f|
        h.each do |key, value|
          f.puts("#{key}='#{value}'")
          env = "#{env}#{key}='#{value}' "
        end
      end
    rescue => e
      puts(e)
    end
  else
    puts('load "log-archiver.default"')
    begin
      File.open('log-archiver.default') do |f|
        env = f.readlines.map {|l| l.chomp }.join(' ')
      end
    rescue => e
      puts(e)
    end
  end

  puts "\n== Preparing database =="
  system! "bundle exec bin/rails db:create #{env}"
  system! "bundle exec bin/rails db:setup #{env}"

  puts "\n== Removing old assets and tempfiles =="
  system! "bundle exec bin/rails assets:clean tmp:clear #{env}"

  puts "\n== Precompiling new assets =="
  system! "bundle exec bin/rails assets:precompile #{env}"
end
